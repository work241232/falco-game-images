name: Download Game Image

on:
  issues:
    types: [opened]

jobs:
  download-image:
    if: contains(github.event.issue.labels.*.name, 'image-request')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Parse issue body
        id: parse
        run: |
          GAME_NAME=$(echo "${{ github.event.issue.title }}" | sed 's/Download image for: //')
          IMAGE_URL=$(echo "${{ github.event.issue.body }}" | grep -o 'Image URL: .*' | cut -d' ' -f3)
          echo "game_name=$GAME_NAME" >> $GITHUB_OUTPUT
          echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT

      - name: Download image
        run: |
          SANITIZED_NAME=$(echo "${{ steps.parse.outputs.game_name }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/_/g')
          mkdir -p images
          curl -L "${{ steps.parse.outputs.image_url }}" -o "images/${SANITIZED_NAME}.jpg"

      - name: Update registry
        run: |
          SANITIZED_NAME=$(echo "${{ steps.parse.outputs.game_name }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/_/g')
          IMAGE_PATH="images/${SANITIZED_NAME}.jpg"
          jq --arg name "${{ steps.parse.outputs.game_name }}" \
             --arg path "/$IMAGE_PATH" \
             --arg date "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
             '.images[$name] = $path | .lastUpdate = $date' registry.json > registry.json.tmp && mv registry.json.tmp registry.json

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add images/ registry.json
          git commit -m "Add image for ${{ steps.parse.outputs.game_name }}"
          git push

      - name: Close issue
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: "âœ… Image downloaded and added to the repository"